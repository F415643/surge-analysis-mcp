[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "technical-indicator-mcp"
version = "1.0.0"
description = "Technical Indicator Stock Screener MCP Service - 基于技术指标的选股MCP服务"
authors = [
    {name = "Technical Analysis Team", email = "tech@example.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Information Analysis"
]
keywords = ["mcp", "technical-analysis", "stock-screening", "trading", "finance"]

dependencies = [
    "fastmcp>=0.2.0",
    "pydantic>=2.0.0",
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "yfinance>=0.2.0",
    "aiohttp>=3.8.0",
    "asyncio-throttle>=1.0.0",
    "python-dateutil>=2.8.0",
    "typing-extensions>=4.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0"
]

test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "httpx>=0.24.0"
]

docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=0.18.0"
]

[project.urls]
Homepage = "https://github.com/example/technical-indicator-mcp"
Repository = "https://github.com/example/technical-indicator-mcp.git"
Documentation = "https://technical-indicator-mcp.readthedocs.io"
"Bug Tracker" = "https://github.com/example/technical-indicator-mcp/issues"

[project.scripts]
technical-indicator-mcp = "technical_indicator_mcp.server:main"
validate-api-keys = "technical_indicator_mcp.api_validator:validate_api_setup"

[tool.setuptools.packages.find]
where = ["."]
include = ["technical_indicator_mcp*"]

[tool.setuptools.package-data]
technical_indicator_mcp = ["*.json", "*.yaml", "*.yml"]

# Black代码格式化配置
[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # 排除的目录
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# isort导入排序配置
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# MyPy类型检查配置
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "yfinance.*",
    "numpy.*",
    "pandas.*"
]
ignore_missing_imports = true

# Pytest配置
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]
asyncio_mode = "auto"

# Coverage配置
[tool.coverage.run]
source = ["technical_indicator_mcp"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]